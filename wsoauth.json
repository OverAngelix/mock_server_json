{
  "connexion": {
    "uid": 123,
    "displayName": "Mobile Test",
    "givenName": "Mobile",
    "sn": "Test",
    "mail": "mobile.test.etu@univ-lille.fr",
    "cn": "Test Mobile",
    "oauthClientId": "oauthClientId-PRODUCTION",
    "supannEtuId": "123",
    "accessToken": "ATBLOPBlOP",
    "refreshToken": "RT---BLIPBLOP",
    "supannCodeINE": "223273732",
    "photoToken": "7f53e45e34e2186",
    "formation": "20XX-20XX | Formation LilSnap",
    "creditIzly": "11,23",
    "exp": "1711704733",
    "expires_in": 600
  },
  "refresh": {
    "access_token": "ATBLOPBlOP",
    "token_type": "bearer",
    "expires_in": 600,
    "scope": ""
  },
  "user": {
    "uid": 123,
    "displayName": "Mobile Test",
    "givenName": "Mobile",
    "sn": "Test",
    "mail": "mobile.test.etu@univ-lille.fr",
    "cn": "Test Mobile",
    "oauthClientId": "oauthClientId-PRODUCTION",
    "supannEtuId": "123",
    "supannCodeINE": "321",
    "formation": "Formation inconnue",
    "creditIzly": "11,23",
    "exp": "1711705030",
    "expires_in": 0
  },
  "getST": "ST-40480622-6eGmNm2-8pa-su-y-hrImMx4itw-cas60-1.univ-lille.fr",
  "endpoints": [
    {
      "name": "connexion",
      "information" : "Requete qui permet à partir du login/mdp d'etablir une connexion et de recuperation les informations de utilisateur (LDAP, Crous, Formation, AccessToken, RefreshToken, Photo)",
      "method": {
        "type": "POST",
        "url": "/connexion",
        "requestModel": {
          "password": "string",
          "username": "string"
        },
        "responseModel": {
          "accessToken": "string",
          "cn": "string",
          "creditIzly": "string",
          "displayName": "string",
          "exp": "string",
          "expires_in": 0,
          "formation": "string",
          "givenName": "string",
          "mail": "string",
          "oauthClientId": "string",
          "photoToken": "string",
          "refreshToken": "string",
          "sn": "string",
          "supannCodeINE": "string",
          "supannEmpId": "string",
          "supannEtuId": "string",
          "uid": 0
        }
      }
    },
    {
      "name": "getUser",
      "information" : "Requete qui permet recuperation les informations de utilisateur (LDAP, Crous, Formation, AccessToken, RefreshToken, Photo) a partir d'un accessToken",
      "method": {
        "type": "GET",
        "url": "/user",
        "Headers": {
          "Authorization": "Bearer OAUTHTOKEN"
        },
        "responseModel": {
          "accessToken": "string",
          "cn": "string",
          "creditIzly": "string",
          "displayName": "string",
          "exp": "string",
          "expires_in": 0,
          "formation": "string",
          "givenName": "string",
          "mail": "string",
          "oauthClientId": "string",
          "photoToken": "string",
          "refreshToken": "string",
          "sn": "string",
          "supannCodeINE": "string",
          "supannEmpId": "string",
          "supannEtuId": "string",
          "uid": 0
        }
      }
    },
    {
      "name": "RefreshToken",
      "information" : "Requete qui permet de recuperer un nouveau accessToken à partir d'un refreshToken",
      "method": {
        "type": "POST",
        "url": "/tokenRefresh",
        "requestModel": {
          "refreshToken": "string"
        },
        "responseModel": {
          "access_token": "string",
          "expires_in": 0,
          "scope": "string",
          "token_type": "string"
        }
      }
    },
    {
      "name": "getST",
      "information" : "Requete qui permet à partir du login/mdp et d'un service d'avoir un ticket (ST) pour l'utilisateur sur un service donné",
      "method": {
        "type": "POST",
        "url": "/getST",
        "requestModel": {
          "password": "string",
          "service": "string",
          "username": "string"
        },
        "responseModel": "string"
      }
    },
    {
      "name": "getPhoto",
      "information" : "Requete qui permet à partir d'un token (photoToken) la photo de l'utilisateur lié a ce token (valide qu'une fois)",
      "method": {
        "type": "GET",
        "url": "/photo/{photoToken}",
        "responseModel": "Media type image/jpeg"
      }
    }
  ]
}